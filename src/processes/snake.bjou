# snake.bjou

module process_snake

using import "console.bjou"
using import "syscall.bjou"
using import "ansi_escapes.bjou"
using import "random.bjou"

const KEY_UNKNOWN := 0
const KEY_UP      := 1
const KEY_DOWN    := 2
const KEY_RIGHT   := 3
const KEY_LEFT    := 4

const RESET         := "\e[0m"
const BLUE          := "\e[34m"

type snake {
    const STACK_SIZE := 2048
    const QM         := 1
    const PROC_NAME  := "snake"

    proc routine(data : void*, data_len : u32) {
        echo_off()

        seedrand(data as u32)

        snake_move_cursor(0, 0)
        write(CLEAR_DISPLAY)

        snake_board : u32[11]
        for i := 0; i < 11; i += 1    { snake_board[i] = 0 }

        score   := 0
        x       := 3
        y       := 3
        head_x  := 3
        head_y  := 3
        tail_x  := 3
        tail_y  := 4
        thing_x := 5
        thing_y := 5

        # set_snake_board(snake_board, head_x, head_y)
        # set_snake_board(snake_board, tail_x, tail_y)

        draw_level()
        draw_thing('@', thing_x, thing_y, x, y)

        while true {
            draw_snake(snake_board, head_x, head_y)
            draw_score(score)
            snake_move_cursor(x, y)

            c := readchar()

            if      c == 'q' { break }
            else if c == 27  {
                key := get_arrow()
                if key == KEY_UP {
                    if y > 3     y -= 1
                } else if key == KEY_DOWN {
                    if y < 13    y += 1
                } else if key == KEY_RIGHT {
                    if x < 34    x += 1
                } else if key == KEY_LEFT {
                    if x > 3     x -= 1
                }

                if x == thing_x and y == thing_y {
                    draw_thing(' ', thing_x, thing_y, x, y)
                    score += 1
                    thing_x = getrand(3, 33)
                    thing_y = getrand(3, 12)
                    draw_thing('@', thing_x, thing_y, x, y)
                }
            }
        }

        snake_move_cursor(0, 0)
        write(CLEAR_DISPLAY)

        echo_on()
    }
}

proc draw_snake(board : u32*, cur_x : u32, cur_y : u32) {
    for y := 0; y < 11; y += 1 {
        for x := 0; x < 32; x += 1 {
            if board[y] band (1 bshl x) {
                draw_thing('*', x + 3, y + 3, cur_x, cur_y)
            }
        }
    }
}

proc set_snake_board(board : u32*, x : u32, y : u32) {
    board[y - 3] = board[y - 3] bor (1 bshl (32 - x - 3))
}

proc snake_move_cursor(x : i32, y : i32) {
    write("\e[")
    write(y)
    write(';')
    write(x)
    write('H')
}

proc draw_score(score : i32) {
    buff : char[32]
    itoa(score, buff)
    snake_move_cursor(1, 1)
    write(  " score: ")  writepad(buff, 26)  writeln()
}

proc draw_level() {
    snake_move_cursor(1, 2)
    writeln(" --------------snake---------------")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" |                                |")
    writeln(" ----------------------------------")
}

proc draw_thing(thing : char, x : i32, y : i32, cur_x : i32, cur_y : i32) {
    snake_move_cursor(x, y)
    write(thing)
    snake_move_cursor(cur_x, cur_y)
}

proc get_arrow() : i32 {
    c := readchar() as i32
    if c == 91 {
        c = readchar()
        if      c == 65    return KEY_UP
        else if c == 66    return KEY_DOWN
        else if c == 67    return KEY_RIGHT
        else if c == 68    return KEY_LEFT
    }
    return KEY_UNKNOWN
}
