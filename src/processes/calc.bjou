# calc.bjou

module process_calc

using import "console.bjou"
using import "syscall.bjou"

type calc {
    const STACK_SIZE := 512
    const QM         := 1
    const PROC_NAME  := "calc"

    proc routine(data : void*, data_len : u32) {
        buff := syscall::alloc(64) as char*
        val := 0

        while true {
            write("=> ")  writeln(val)
            input := get_op_and_val(buff)

            if      input.0 == '+' { val += input.1 }
            else if input.0 == '-' { val -= input.1 }
            else if input.0 == '*' { val *= input.1 }
            else if input.0 == '/' { val /= input.1 }
            else if input.0 == '%' { val %= input.1 }
            else if input.0 == 'q' { break          }
            else { writeln("usage: OP VAL")
                   writeln("'q' to quit")           }
        }
    }
}

proc get_op_and_val(buff : char*) : (char, i32) {
    readln(buff)
    while @buff == ' ' { buff += 1 }
    l := cstrlen(buff) - 1
    buff[l] = 0

    line := buff 

    while @line and @line != ' ' { line += 1 }
    spc_idx      := line - buff

    op_str       := buff
    op           := op_str[0]
    val_str      := buff + spc_idx + 1
    val          := atoi(val_str)

    return (op, val)
}
